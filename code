#include<conio.h>
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
int i,j,height=20,width=20;
int gameover,score;
int x,y,fruitx,fruity,flag;
//function to gernerate frout within boundary 
void setup()
{
	gameover=0;
	x=height/2;
	y=width/2;
	label1://indicates location in code
		fruity=rand() % 20;
		if(fruity==0)
		goto label1;//go to is a jump statement
    label2:
    	fruitx=rand() % 20;
    	if(fruitx==0)
    	goto label2;
    score=0;
		
}
//functions to draw the boundries
void draw()
{
	system("cls");// for clearing(cls) the terminal(system)
	for(i=0;i<height;i++)
	{
		for(j=0;j<width;j++)
		{
			if(i==0||i==width-1||j==0||j==height-1)
			{
				printf("#");
				
			}
			else{
				if(i==x&&j==y)
				printf("0");
				else if(i==fruitx&&j==fruity)
				printf("*");
				else
				printf(" ");
			}
		}
		printf("\n");
	}
	//print the score after the game ends
	printf("score=%d",score);
	printf("\n");
	printf("press x to quit the game");
}
// function to take input
void input()
{
	if(kbhit())
	{
		switch(getch())
		{
			case'a':
				flag=1;
				break;
			case's':
				flag=2;
				break;
			case'd':
				flag=3;
				break;
			case'w':
				flag=4;
				break;
			case'x':
				gameover=1;
				break;
		}
	}
}
//function for the logic behind each moment
void logic()
{
	sleep(0.01);//wait for some time
	switch(flag)
	{
		case 1:
			y--;
			break;
		case 2:
		    x++;
		    break;
		case 3:
		    y++;
		    break;
		case 4:
		     x--;
		     break;
		default:
		     break;
	}
	//if the snake reaches the fruit then update the score
	if(x==fruitx && y==fruity)
	{
		label3:
			fruitx=rand()%20;
			if(fruitx==0)
			goto label3;
			
	//after eating the above fruit generate new fruit
	    label4:
	    	fruity=rand()%20;
	    	if(fruity==0)
	    	goto label4;
	    	score+=10;
	}
}
int main()
{
	int m,n;
    //boundary setup
    setup();
    while(!gameover)
    {
    	draw();
	input();
	logic();
	}
	
}
